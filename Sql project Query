***Q1- Is 30-day rolling retention increasing or decreasing over the lifecycle of the game? 
```
SELECT
    joined Day_joined,
    COUNT(player_id) Players_joined,
    SUM(Retention_Status) Players_retained,
    ROUND((SUM(Retention_Status)/COUNT(player_id)),2) AS fraction_retention,
FROM 
    (SELECT
    p.player_id,
    p.joined,
    CASE
    WHEN (MAX(M.day) - (p.joined)) >= 30 THEN 1
    ELSE
    0
    END  Retention_Status
 FROM
    `myjunoproject.cohort2_Mysql_project.matches_info` m
JOIN
    `cohort2_Mysql_project.player_info` p
 ON
    p.player_id = M.player_id
GROUP BY
    p.joined,
    p.player_id) AS retention_status_players
GROUP BY
    joined;
```

***Q2: Do players with rolling 30-day retention come from specific regions?

```
SELECT
      DISTINCT p.location AS location,
      COUNT(DISTINCT p.player_id) AS players,
      CASE
      WHEN MAX(m.day)-MIN(p.joined) > 30 THEN 1
      ELSE
      0
END
      AS num_retained
FROM
     `myjunoproject.cohort2_Mysql_project.matches_info` m
JOIN
     `cohort2_Mysql_project.player_info` p
ON
      p.player_id = M.player_id
GROUP BY
      p.location
ORDER BY
      players DESC;
```

*** Q 3:Do players with rolling 30-day retention spend more?
      
```
SELECT ROUND(SUM(sum_price),2) AS sum_total_spend,
       retention_table.retention_status
FROM
       (SELECT 
       pr.player_id,
       Round(SUM(i.price),2) as sum_price
 FROM
       `myjunoproject.cohort2_Mysql_project.purchase_info`  pr
 JOIN
       `myjunoproject.cohort2_Mysql_project.item_info`   i
 ON
        pr.item_id = i.item_id
 GROUP BY 
        pr.player_id) total_spends

 JOIN
    (SELECT 
    player_id,
    CASE WHEN max_days >= joined + 29 THEN 1 ELSE 0  END retention_status

FROM
    (SELECT 
    p.player_id,
    Max(m.day) AS max_days,
    p.joined
FROM 
   `myjunoproject.cohort2_Mysql_project.matches_info` m
JOIN 
   `cohort2_Mysql_project.player_info` p
 ON
    p.player_id = M.player_id
    GROUP BY p.player_id,p.joined) AS max_retained_days
    ORDER BY 2 desc) retention_table
    ON
    total_spends.player_id = retention_table.player_id
 GROUP BY retention_table.retention_status;   
``` 

 # Q4: What is the average age of player for this game?
  The average age of playe is in 20s.

 ```
 SELECT
      DISTINCT location,
      ROUND(avg(age) over (partition by location),2) as max_age_player,
      COUNT(player_id) over (partition by location) total_player,

  FROM
      `cohort2_Mysql_project.player_info`
       ORDER BY 
       location;
```       

# Q5:What s the total number of wins & loss in retained players & not retained players?

```
SELECT 
COUNT(player_id) total_players, 
SUM(total_analsis.total_wins) total_wins,
SUM(total_analsis.total_losses) total_loss,
retention_status------not retained people win & loss
From
(SELECT 
win_loss_table.player_id,
win_loss_table.total_wins,
win_loss_table.total_losses,
retention_table.retention_status

FROM

(SELECT 
win_matches.player_id,
win_matches.total_wins,
loss_matches.total_losses

 FROM 
 ---this one is for total wins
(SELECT player_id,
Count(outcome) AS total_wins
 FROM `myjunoproject.cohort2_Mysql_project.matches_info` 
 Where outcome = 'win'
 Group by player_id) AS win_matches
JOIN
---this one is for total loss
 (SELECT player_id,
Count(outcome) AS total_losses
 FROM `myjunoproject.cohort2_Mysql_project.matches_info` 
 Where outcome = 'loss'
 Group by player_id) AS loss_matches
 ON win_matches.player_id = loss_matches.player_id) win_loss_table

JOIN 
---retention table
(SELECT 
player_id,
CASE WHEN max_days >= joined + 29 THEN 1 ELSE 0  END retention_status

FROM
(SELECT 
p.player_id,
Max(m.day) AS max_days,
p.joined
FROM 
`myjunoproject.cohort2_Mysql_project.matches_info` m
JOIN 
 `cohort2_Mysql_project.player_info` p
 ON
    p.player_id = M.player_id
    GROUP BY p.player_id,p.joined) AS max_retained_days
    ORDER BY 2 desc ) AS retention_table

ON win_loss_table.player_id = retention_table.player_id
Order by 3 desc ) total_analsis
Group By retention_status;
```
